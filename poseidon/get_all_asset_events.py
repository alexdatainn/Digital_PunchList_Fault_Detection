from datetime import datetime

import pandas as pd
import requests


def get_all_asset_events(start_time, end_time):
    """
    This function requests the events generated by each asset for all the assets owned by liberty and returns a
    DataFrame of dictionaries which each contains the asset events of the turbine, here is an extract from the
    API documentation explaining the priority number:


    The current value for the requested asset(s) priority(ies) is an enumerated constant “priority” with values
    corresponding to the terms below:
        1. Okay
        2. Low
        3. Medium
        4. High
        5. Critical
        6. Pending review: awaiting assessment by monitoring team
    :param start_time: A datetime object of the datetime the query should start at.
    :param end_time:A datetime object of the datetime the query should end at.
    :return: A DataFrame which contains information of each asset's events/alarms that were triggered
    """
    url = 'https://psl2backend.poseidonsys.com/graphql'
    body = """query eventsByModelAndDate(
    $start: Int!
    $end: Int!
    $model: String
    $modelList: [ID]
    $isChart: Boolean
    $categories: [String]
    ) {
    eventsByModelAndDate(
    start: $start
    end: $end
    model: $model
    modelList: $modelList
    isChart: $isChart
    categories: $categories
    ) {
    name
    categories
    description
    timestamp
    dateAdded
    assets {
    name
    priority
    location {
    name
    company {
    name
    }
    }
    parent {
    name
    location {
    name
    company {
    name
    }
    }
    }
    }
    devices {
    name
    }
    }
    }
    """
    # "categories": ['alertTriggered', 'alertTriggerReset', 'priorityChanged'],
    vars = {
        "start": int(start_time.timestamp()),
        "end": int(end_time.timestamp()),
        "model": 'company',
        "modelList": ["6189537e01cafc001b11244f"],
    }

    response = requests.post(url=url, json={"query": body, "variables": vars},
                             auth=("", "pJ$B1S#"))
    if response.ok:
        response = pd.DataFrame(response.json()["data"]["eventsByModelAndDate"])
        return response
    return None
